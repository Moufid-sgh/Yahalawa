generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  FREE
  PREMIUM
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(FREE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recipes {
  id                  Int     @id @default(autoincrement())
  title               String
  slug                String?
  description         String? @db.Text
  difficulty          String
  nbr_serves          Int
  preparation_time    Int
  cooking_time        Int
  total_time          Int
  cooking_temperature Int
  video_link          String? @db.Text
  status              String
  rank                Int?
  seoDescription      String? @db.Text
  seoTitle            String? @db.Text
  id_intern           String? @db.Text
  author              String?
  note                String?
  ingredient_title    String?
  is_paying           String
  videoPath           String?
  imgPath             String?
  likes               Int?
  glucides            Int?
  proteines           Int?
  graisses            Int?
  kcal                Int?

  category      CategoryRecipesSelected[]
  ingredients   IngredientsRecipe[]
  relatedRecipe RelatedRecipe[]
  steps         RecipeSteps[]
  origine       OrigineRecipe[]
  tags          TagsRecipe[]
  ustensiles    UstensilesRecipe[]

  scheduledAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}

model CategoryRecipesSelected {
  id        Int      @id @default(autoincrement())
  title     String?
  Recipes   Recipes? @relation(fields: [recipesId], references: [id])
  recipesId Int?
}

model RecipeSteps {
  id          Int      @id @default(autoincrement())
  title       String?
  description String?  @db.Text
  step        Int?
  Recipes     Recipes? @relation(fields: [recipesId], references: [id])
  recipesId   Int?
}

model IngredientsRecipe {
  id         Int      @id @default(autoincrement())
  ingredient String?
  unite      String?
  qte_cup    Int?
  qte_gramme Int?
  Recipes    Recipes? @relation(fields: [recipesId], references: [id])
  recipesId  Int?
}

model RelatedRecipe {
  id        Int      @id @default(autoincrement())
  name      String?
  link      String?
  Recipes   Recipes? @relation(fields: [recipesId], references: [id])
  recipesId Int?
}

model TagsRecipe {
  id        Int      @id @default(autoincrement())
  title     String
  Recipes   Recipes? @relation(fields: [recipesId], references: [id])
  recipesId Int?
}

model OrigineRecipe {
  id        Int      @id @default(autoincrement())
  title     String
  img       String
  Recipes   Recipes? @relation(fields: [recipesId], references: [id])
  recipesId Int?
}

model UstensilesRecipe {
  id        Int      @id @default(autoincrement())
  title     String?
  Recipes   Recipes? @relation(fields: [recipesId], references: [id])
  recipesId Int?
}

model Ingredients {
  id    Int    @id @default(autoincrement())
  title String
  type  String
}

model Category {
  id             Int     @id @default(autoincrement())
  title          String
  seoTitle       String?
  description    String? @db.Text
  seoDescription String? @db.Text
  status         String
}

model Unit {
  id    Int    @id @default(autoincrement())
  title String
}

model Ustensiles {
  id    Int    @id @default(autoincrement())
  title String
}

model Tags {
  id     Int    @id @default(autoincrement())
  title  String
  status String
}

model Origine {
  id    Int    @id @default(autoincrement())
  title String
  img   String
}

model Tips {
  id             Int                    @id @default(autoincrement())
  title          String
  seoTitle       String?
  description    String?
  seoDescription String?
  category       CategoryTipsSelected[]
  slug           String?
  author         String?
  img            String?
  featured       Boolean?
  status         String
  createdAt      DateTime               @default(now())
  updatedAt      DateTime?              @updatedAt
  is_paying      String
  likes          Int?
  note           String?
  scheduledAt    DateTime?
  id_intern      String
  video_link     String?
  thumbnailName  String?
  video_nature   Int?
}

model CategoryTipsSelected {
  id     Int    @id @default(autoincrement())
  title  String
  Tips   Tips?  @relation(fields: [tipsId], references: [id])
  tipsId Int?
}

model CategoryTips {
  id     Int    @id @default(autoincrement())
  title  String
  status String
}

//Menu part----------------------------------------------------------------------------//
model editableMenu {
  id       Int               @id @default(autoincrement())
  title    String
  subtitle SubEditableMenu[]
}

model SubEditableMenu {
  id             Int           @id @default(autoincrement())
  title          String
  order          Int
  editableMenu   editableMenu? @relation(fields: [editableMenuId], references: [id])
  editableMenuId Int?
}
