generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipes {
  id                  Int     @id @default(autoincrement())
  title               String
  alias               String
  description         String  @db.Text
  idI                 String? @db.Text
  Author              String
  Note                String?
  Type                String
  Status              Boolean
  is_paying           Boolean
  highlighted         Boolean
  ing_title           String?
  difficulty          String
  preparation_time    Int
  cooking_time        Int
  cooking_temperature Int
  nbr_serves          Int
  video_link          String
  img_link            String
  likes               Int
  meta_keywords       String  @db.Text
  meta_desc           String  @db.Text

  category      categoryRecipesSelected[]
  ingredients   IngredientsRecipe[]
  relatedRecipe RelatedRecipe[]
  instructions  Instructions[]
  origine       OrigineRecipe[]

  publish_date DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model categoryRecipesSelected {
  id        Int      @id @default(autoincrement())
  title     String
  Recipes   Recipes? @relation(fields: [recipesId], references: [id])
  recipesId Int?
}

model IngredientsRecipe {
  id         Int      @id @default(autoincrement())
  quantity   Int
  ingredient String
  unit       String
  Recipes    Recipes? @relation(fields: [recipesId], references: [id])
  recipesId  Int?
}

model RelatedRecipe {
  id        Int      @id @default(autoincrement())
  link      String
  Recipes   Recipes? @relation(fields: [recipesId], references: [id])
  recipesId Int?
}

model OrigineRecipe {
  id        Int      @id @default(autoincrement())
  title     String
  img       String
  Recipes   Recipes? @relation(fields: [recipesId], references: [id])
  recipesId Int?
}

model Instructions {
  id          Int      @id @default(autoincrement())
  title       String
  instruction String   @db.Text
  Recipes     Recipes? @relation(fields: [recipesId], references: [id])
  recipesId   Int?
}

model Ingredients {
  id    Int    @id @default(autoincrement())
  title String
  type  String
}

model Category {
  id             Int     @id @default(autoincrement())
  title          String
  seoTitle       String?
  description    String? @db.Text
  seoDescription String? @db.Text
  status         String
}

model Unit {
  id    Int    @id @default(autoincrement())
  title String
}

model Ustensiles {
  id    Int    @id @default(autoincrement())
  title String
}

model Tags {
  id     Int    @id @default(autoincrement())
  title  String
  status String
}

model Origine {
  id    Int    @id @default(autoincrement())
  title String
  img   String
}

model Tips {
  id                     Int                    @id @default(autoincrement())
  title                  String
  seoTitle               String?
  description            String?
  seoDescription         String?
  category               CategoryTipsSelected[]
  slug                   String?
  author                 String?
  img                    String?
  featured               Boolean?
  status                 String
  createdAt              DateTime               @default(now())
  updatedAt              DateTime?              @updatedAt
  is_paying              String
  likes                  Int?
  note                   String?
  scheduled_publish_date DateTime?
  id_intern              String
  video_link             String?
  thumbnailName          String?
  video_nature           Int?
}

model CategoryTipsSelected {
  id     Int    @id @default(autoincrement())
  title  String
  Tips   Tips?  @relation(fields: [tipsId], references: [id])
  tipsId Int?
}

model CategoryTips {
  id     Int    @id @default(autoincrement())
  title  String
  status String
}

//Menu part----------------------------------------------------------------------------//
model editableMenu {
  id       Int               @id @default(autoincrement())
  title    String
  subtitle SubEditableMenu[]
}

model SubEditableMenu {
  id             Int           @id @default(autoincrement())
  title          String
  order          Int
  editableMenu   editableMenu? @relation(fields: [editableMenuId], references: [id])
  editableMenuId Int?
}
